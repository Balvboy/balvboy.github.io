<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java同步机制 on ZhouYang&#39;s Blog</title>
    <link>https://balvboy.github.io/categories/java%E5%90%8C%E6%AD%A5%E6%9C%BA%E5%88%B6/</link>
    <description>Recent content in Java同步机制 on ZhouYang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 24 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://balvboy.github.io/categories/java%E5%90%8C%E6%AD%A5%E6%9C%BA%E5%88%B6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java同步机制(六)- AQS</title>
      <link>https://balvboy.github.io/blog/aqs/</link>
      <pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/aqs/</guid>
      <description>终于来到了重头戏-AQS,AQS可以说是整个J.U.C的核心，整个工具包中的大部分同步工具都是借助于AQS来实现的。接下来我们将通过Reen</description>
    </item>
    
    <item>
      <title>Java同步机制(五)-Lock接口</title>
      <link>https://balvboy.github.io/blog/lock/</link>
      <pubDate>Wed, 23 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/lock/</guid>
      <description>&lt;h1 id=&#34;lock接口&#34;&gt;Lock接口&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Lock&lt;/code&gt;接口是&lt;code&gt;J.U.C&lt;/code&gt;中的一个接口，为我们提供和&lt;code&gt;Synchronized&lt;/code&gt;相似的并发控制功能，但是使用起来比&lt;code&gt;Synchronized&lt;/code&gt;更加灵活。
下面我们通过接口中定义的方法来分析一下&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java同步机制(四)-LockSupport</title>
      <link>https://balvboy.github.io/blog/locksupport/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/locksupport/</guid>
      <description>LockSupport LockSupport是Java中实现同步的一个重要方式，LockSupport提供了阻塞线程和唤醒线程的功能。 LockSupport中的</description>
    </item>
    
    <item>
      <title>Java同步机制(三)-JMM</title>
      <link>https://balvboy.github.io/blog/jmm/</link>
      <pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/jmm/</guid>
      <description>#JMM 什么是Memory Model 想要了解JMM，我们先来了解一下什么是内存模型，下面是JMM规范中对内存模型的描述。 A high level, informal overview of the memory model shows it to be a set of rules</description>
    </item>
    
    <item>
      <title>Java同步机制(二)-Volatile</title>
      <link>https://balvboy.github.io/blog/volatile/</link>
      <pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/volatile/</guid>
      <description>volatile在Java中的语义 对于volatile我们都比较熟悉，volatile在Java中有两种作用 保障字段在多线程之间的可见性 防止</description>
    </item>
    
    <item>
      <title>Java同步机制(一)-Synchronized</title>
      <link>https://balvboy.github.io/blog/synchronized/</link>
      <pubDate>Fri, 19 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/synchronized/</guid>
      <description>Java对象头 锁升级和对象头关系很密切，所以我先了解一下对象头。 我们先来看一下64位系统下对象头的结构，对象头结构分为两部分Mark Word</description>
    </item>
    
  </channel>
</rss>
