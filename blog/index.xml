<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on ZhouYang&#39;s Blog</title>
    <link>https://balvboy.github.io/blog/</link>
    <description>Recent content in Blogs on ZhouYang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 28 Jul 2021 10:53:40 +0800</lastBuildDate><atom:link href="https://balvboy.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL的事务、日志、锁和MVCC</title>
      <link>https://balvboy.github.io/blog/mysql_lock/</link>
      <pubDate>Wed, 28 Jul 2021 10:53:40 +0800</pubDate>
      
      <guid>https://balvboy.github.io/blog/mysql_lock/</guid>
      <description>MySQL的存储引擎 MySQL有多种可选的存储引擎，常见的有 InnoDB MyISAM Memory 其中InnoDB是最常用的存储引擎，并且也是目前MySQL的默认存储引擎。</description>
    </item>
    
    <item>
      <title>Java同步机制(六)- AQS</title>
      <link>https://balvboy.github.io/blog/aqs/</link>
      <pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/aqs/</guid>
      <description>终于来到了重头戏-AQS,AQS可以说是整个J.U.C的核心，整个工具包中的大部分同步工具都是借助于AQS来实现的。接下来我们将通过Reen</description>
    </item>
    
    <item>
      <title>Java同步机制(五)-Lock接口</title>
      <link>https://balvboy.github.io/blog/lock/</link>
      <pubDate>Wed, 23 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/lock/</guid>
      <description>&lt;h1 id=&#34;lock接口&#34;&gt;Lock接口&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Lock&lt;/code&gt;接口是&lt;code&gt;J.U.C&lt;/code&gt;中的一个接口，为我们提供和&lt;code&gt;Synchronized&lt;/code&gt;相似的并发控制功能，但是使用起来比&lt;code&gt;Synchronized&lt;/code&gt;更加灵活。
下面我们通过接口中定义的方法来分析一下&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java同步机制(四)-LockSupport</title>
      <link>https://balvboy.github.io/blog/locksupport/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/locksupport/</guid>
      <description>LockSupport LockSupport是Java中实现同步的一个重要方式，LockSupport提供了阻塞线程和唤醒线程的功能。 LockSupport中的</description>
    </item>
    
    <item>
      <title>Java同步机制(三)-JMM</title>
      <link>https://balvboy.github.io/blog/jmm/</link>
      <pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/jmm/</guid>
      <description>#JMM 什么是Memory Model 想要了解JMM，我们先来了解一下什么是内存模型，下面是JMM规范中对内存模型的描述。 A high level, informal overview of the memory model shows it to be a set of rules</description>
    </item>
    
    <item>
      <title>Java同步机制(二)-Volatile</title>
      <link>https://balvboy.github.io/blog/volatile/</link>
      <pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/volatile/</guid>
      <description>volatile在Java中的语义 对于volatile我们都比较熟悉，volatile在Java中有两种作用 保障字段在多线程之间的可见性 防止</description>
    </item>
    
    <item>
      <title>Java同步机制(一)-Synchronized</title>
      <link>https://balvboy.github.io/blog/synchronized/</link>
      <pubDate>Fri, 19 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/synchronized/</guid>
      <description>Java对象头 锁升级和对象头关系很密切，所以我先了解一下对象头。 我们先来看一下64位系统下对象头的结构，对象头结构分为两部分Mark Word</description>
    </item>
    
    <item>
      <title>Redis为何使用单线程 </title>
      <link>https://balvboy.github.io/blog/redis/</link>
      <pubDate>Fri, 19 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/redis/</guid>
      <description>Redis的线程 从接触到Redis开始，就了解到Redis的一个重要特性就是单线程。 带着这个特性，我通过命令top -H -p 2582查看了Redi</description>
    </item>
    
    <item>
      <title>HTTPS详解 </title>
      <link>https://balvboy.github.io/blog/http/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/http/</guid>
      <description>什么是HTTPS HTTPS简单的说就是安全版的HTTP。 因为HTTP协议的数据都是明文进行传输的，所以对于一些敏感信息的传输就很不安全，为了</description>
    </item>
    
    <item>
      <title>字符集和字符编码 </title>
      <link>https://balvboy.github.io/blog/encoding/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/encoding/</guid>
      <description>字符编码 字符编码是我们在开发过程中无法逃避的问题，经常遇到各种各样的乱码。通常我们会在几个地方设置一下字符编码方式，然后乱码解决了，然后就会</description>
    </item>
    
    <item>
      <title>cron表达式 </title>
      <link>https://balvboy.github.io/blog/cron/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://balvboy.github.io/blog/cron/</guid>
      <description>&lt;h1 id=&#34;一-cron介绍&#34;&gt;一、cron介绍&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;crontab命令常见于Unix和类Unix的操作系统之中，用于设置周期性被执行的指令。该命令从标准输入设备读取指令，并将其存放于“crontab”文件中，以供之后读取和执行。该词来源于希腊语chronos(χρόνος)，原意是时间。
通常，crontab储存的指令被守护进程激活，crond常常在后台运行，每一分钟检查是否有预定的作业需要执行。这类作业一般称为cron jobs。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
  </channel>
</rss>
